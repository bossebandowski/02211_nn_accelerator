
/*
 * Generic definitions for OCP
 *
 * Authors: Wolfgang Puffitsch (wpuffitsch@gmail.com)
 *
 */

package ocp

import Chisel._

// Constants for MCmd
object OcpCmd {
  val IDLE = "b000".U(3.W)
  val WR   = "b001".U(3.W)
  val RD   = "b010".U(3.W)
//  val RDEX = "b011".U(3.W)
//  val RDL  = "b100".U(3.W)
//  val WRNP = "b101".U(3.W)
//  val WRC  = "b110".U(3.W)
//  val BCST = "b111".U(3.W)
}

// Constants for SResp
object OcpResp {
  val NULL = "b00".U(2.W)
  val DVA  = "b01".U(2.W)
  val FAIL = "b10".U(2.W)
  val ERR  = "b11".U(2.W)
}

// MS: would like fields (e.g. data) to start with lower case.
// Just classes start with upper case.

// Signals generated by master
class OcpMasterSignals(val addrWidth : Int, val dataWidth : Int) extends Bundle() {
  val Cmd = Output(UInt(width = 3))
  val Addr = Output(UInt(width = addrWidth))
  val Data = Output(UInt(width = dataWidth))
}

// Signals generated by slave
class OcpSlaveSignals(val dataWidth : Int) extends Bundle() {
  val Resp = Input(UInt(width = 2))
  val Data = Input(UInt(width = dataWidth))
}
